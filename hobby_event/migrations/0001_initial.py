# Generated by Django 2.0.7 on 2019-06-14 13:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('external_page', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EventSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('search_string', models.CharField(max_length=128, null=True)),
                ('zip_code_search', models.CharField(max_length=128, null=True)),
                ('datetime', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HobbyEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(max_length=128, null=True)),
                ('datetime', models.DateTimeField(null=True)),
                ('city', models.CharField(max_length=64, null=True)),
                ('city_district', models.CharField(max_length=64, null=True)),
                ('zip_code', models.CharField(max_length=6, null=True)),
                ('address', models.CharField(max_length=64, null=True)),
                ('location_name', models.CharField(blank=True, max_length=64, null=True)),
                ('price', models.PositiveIntegerField(default=0, null=True)),
                ('description', models.TextField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_accepted', models.BooleanField(default=False)),
                ('is_hidden', models.BooleanField(default=False)),
                ('event_color_red', models.PositiveIntegerField(default=255)),
                ('event_color_green', models.PositiveIntegerField(default=255)),
                ('event_color_blue', models.PositiveIntegerField(default=255)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('event_host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='external_page.Instructor')),
                ('hobby', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='external_page.Hobby')),
            ],
        ),
        migrations.CreateModel(
            name='HobbyEventSignup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('email', models.CharField(max_length=64)),
                ('telephone', models.CharField(blank=True, max_length=16, null=True)),
                ('is_success', models.BooleanField(default=False)),
                ('is_removed', models.BooleanField(default=False)),
                ('hobby_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobby_event.HobbyEvent')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VisitHobbyEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, null=True)),
                ('hobby_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hobby_event.HobbyEvent')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
